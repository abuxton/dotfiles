# eval "$(pyenv init -)"
export LDFLAGS="-L/usr/local/opt/zlib/lib"
export CPPFLAGS="-I/usr/local/opt/zlib/include"
export PKG_CONFIG_PATH="/usr/local/opt/zlib/lib/pkgconfig"
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:/Users/abuxton/.local/bin:$PATH"
eval "$(pyenv init --path)"
autoload -U compinit && compinit
eval "$(register-python-argcomplete pipx)"

# Load pyenv into the shell by adding
# the following to ~/.zshrc:

# eval "$(pyenv init -)"

# Load pyenv automatically by appending
# the following to
# ~/.zprofile (for login shells)
# and ~/.zshrc (for interactive shells) :

# export PYENV_ROOT="$HOME/.pyenv"
# [[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
# eval "$(pyenv init - zsh)"


alias gitdir='python3 ~/src/gitdir/gitdir.py $(git remote get-url origin)'
alias octoprint-serve='~/src/abuxton/fork/OctoPrint/venv/bin/octoprint'
alias octoprint='open http://127.0.0.1:5000'

## directory for virtualenvs created using virtualenvwrapper
#export WORKON_HOME=/Users/$(whoami)/.virtualenvs
## ensure all new environments are isolated from the site-packages directory
#export VIRTUALENVWRAPPER_VIRTUALENV_ARGS='--no-site-packages'
## use the same directory for virtualenvs as virtualenvwrapper
#export PIP_VIRTUALENV_BASE=$WORKON_HOME
## makes pip detect an active virtualenv and install to it
#export PIP_RESPECT_VIRTUALENV=true
#if [[ -r /usr/local/bin/virtualenvwrapper.sh ]]; then
#    source /usr/local/bin/virtualenvwrapper.sh
#elif [[ -r /Users/$(whoami)/.pyenv/shims/virtualenvwrapper.sh ]];then
##    source /Users/$(whoami)/.pyenv/shims/virtualenvwrapper.sh
#else
#    echo "WARNING: Can't find virtualenvwrapper.sh"
#fi

alias pip-install="echo '# pip install ~/.pip_requirements' "
